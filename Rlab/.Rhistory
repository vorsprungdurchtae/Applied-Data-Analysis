geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
# # Create a, b, c, d variables
# a <- c(10,20,30,40)
# b <- c('book', 'pen', 'textbook', 'pencil_case')
# c <- c(TRUE,FALSE,TRUE,FALSE)
# d <- c(2.5, 8, 10, 7)
# # Join the variables to create a data frame
# df <- data.frame(a,b,c,d)
# df
# generate a dataframe such that
# each column represents the attributes
# and each row represents corresponding event logs
# the row order is L_filtered, L_A, L_W, and L_O
num_case = c(28976, 28976, 28976, 28976)
num_variant = c(5862, 88, 197, 815)
num_events = c(536130, 220481, 137037, 178612)
num_avg_event = c(19.83, 7.61, 4.73, 6.16)
num_activity = c(24, 10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
#df$Log <- factor(df$Log, levels = df$Log)
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
# # Create a, b, c, d variables
# a <- c(10,20,30,40)
# b <- c('book', 'pen', 'textbook', 'pencil_case')
# c <- c(TRUE,FALSE,TRUE,FALSE)
# d <- c(2.5, 8, 10, 7)
# # Join the variables to create a data frame
# df <- data.frame(a,b,c,d)
# df
# generate a dataframe such that
# each column represents the attributes
# and each row represents corresponding event logs
# the row order is L_filtered, L_A, L_W, and L_O
num_case = c(28976, 28976, 28976, 28976)
num_variant = c(5862, 88, 197, 815)
num_events = c(536130, 220481, 137037, 178612)
num_avg_event = c(19.83, 7.61, 4.73, 6.16)
num_activity = c(24, 10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
# # Create a, b, c, d variables
# a <- c(10,20,30,40)
# b <- c('book', 'pen', 'textbook', 'pencil_case')
# c <- c(TRUE,FALSE,TRUE,FALSE)
# d <- c(2.5, 8, 10, 7)
# # Join the variables to create a data frame
# df <- data.frame(a,b,c,d)
# df
# generate a dataframe such that
# each column represents the attributes
# and each row represents corresponding event logs
# the row order is L_filtered, L_A, L_W, and L_O
num_case = c(28976, 28976, 28976, 28976)
num_variant = c(5862, 88, 197, 815)
num_events = c(536130, 220481, 137037, 178612)
num_avg_event = c(19.83, 7.61, 4.73, 6.16)
num_activity = c(24, 10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
df
num_case = c(28976, 28976, 28976, 28976)
num_variant = c(5862, 88, 197, 815)
num_events = c(536130, 220481, 137037, 178612)
num_avg_event = c(19.83, 7.61, 4.73, 6.16)
num_activity = c(24, 10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
sapply(df, class)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
num_case = c(28976, 28976, 28976)
num_variant = c(88, 197, 815)
num_events = c(220481, 137037, 178612)
num_avg_event = c(7.61, 4.73, 6.16)
num_activity = c(10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
#df$Log <- factor(df$Log, levels = df$Log)
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
df
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
# # Create a, b, c, d variables
# a <- c(10,20,30,40)
# b <- c('book', 'pen', 'textbook', 'pencil_case')
# c <- c(TRUE,FALSE,TRUE,FALSE)
# d <- c(2.5, 8, 10, 7)
# # Join the variables to create a data frame
# df <- data.frame(a,b,c,d)
# df
# generate a dataframe such that
# each column represents the attributes
# and each row represents corresponding event logs
# the row order is L_filtered, L_A, L_W, and L_O
num_case = c(28976, 28976, 28976)
num_variant = c(88, 197, 815)
num_events = c(220481, 137037, 178612)
num_avg_event = c(7.61, 4.73, 6.16)
num_activity = c(10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
#df$Log <- factor(df$Log, levels = df$Log)
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
num_case = c(28976, 28976, 28976)
num_variant = c(88, 197, 815)
num_events = c(220481, 137037, 178612)
num_avg_event = c(7.61, 4.73, 6.16)
num_activity = c(10, 6, 8)
log_names = c("L_filtered", "L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
# # Create a, b, c, d variables
# a <- c(10,20,30,40)
# b <- c('book', 'pen', 'textbook', 'pencil_case')
# c <- c(TRUE,FALSE,TRUE,FALSE)
# d <- c(2.5, 8, 10, 7)
# # Join the variables to create a data frame
# df <- data.frame(a,b,c,d)
# df
# generate a dataframe such that
# each column represents the attributes
# and each row represents corresponding event logs
# the row order is L_filtered, L_A, L_W, and L_O
num_case = c(28976, 28976, 28976)
num_variant = c(88, 197, 815)
num_events = c(220481, 137037, 178612)
num_avg_event = c(7.61, 4.73, 6.16)
num_activity = c(10, 6, 8)
log_names = c("L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
#df$Log <- factor(df$Log, levels = df$Log)
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
ggplot(df,aes(df$Log,df$Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=df$Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
library(ggplot2)
library(mvtnorm)
library(MASS)
library(dplyr)
library(tidyr)
library(gridExtra)
library(car)
library(datasets)
#
# # Create a, b, c, d variables
# a <- c(10,20,30,40)
# b <- c('book', 'pen', 'textbook', 'pencil_case')
# c <- c(TRUE,FALSE,TRUE,FALSE)
# d <- c(2.5, 8, 10, 7)
# # Join the variables to create a data frame
# df <- data.frame(a,b,c,d)
# df
# generate a dataframe such that
# each column represents the attributes
# and each row represents corresponding event logs
# the row order is L_filtered, L_A, L_W, and L_O
num_case = c(28976, 28976, 28976)
num_variant = c(88, 197, 815)
num_events = c(220481, 137037, 178612)
num_avg_event = c(7.61, 4.73, 6.16)
num_activity = c(10, 6, 8)
log_names = c("L_A", "L_W", "L_O")
df <- data.frame(log_names,
num_case,
num_variant,
num_events,
num_avg_event,
num_activity)
colnames(df) <- c('Log' ,'Cases','Variants','Events', 'Avg.Events', 'Activities')
#df$Log <- factor(df$Log, levels = df$Log)
ggplot(df,aes(Log,Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
ggplot(df,aes(Log,Cases))+
geom_bar(stat="identity", fill="steelblue")  +
labs(x="Log", y="Cases") +
geom_text(aes(label=Variants), vjust=-0.3,  size=3.5)+
theme_minimal()
a = c(1,2,3)
a
b = c(3, -5, 0)
pi
exp(2.5)
A = matrix(c(3, 1.5, 1/8,
5, -pi, -6,
-1, exp(2.5), 9), nrow = 3, ncol = 3)
A
B = matrix(c(1, -2, 3,
-2, 4, -6,
3, -6, 9), nrow = 3, ncol = 3)
B
A %*% a
A^2
A %*% A
a.T
t(a)
t(a) %*% b
B[1]
B
B[1:]
B[1:,]
B[1,:]
B[,1]
B[1,]
B[2,]
B[3,]
Bprim =cbind(B[1,] + B[2], B[3,])
Bprim
Bprim =cbind(B[1,] + B[2,], B[3,])
Bprim
Bprim[,1]
B[,1]
B[1,]
Bprim = cbind(B[,1] + B[,2], B[,3])
Bprim
Bprim = rbind(Bprim[1,] + Bprim[2,], Bprim[3,])
Bprim
x = c(5, 2, 6, 4, 1, 2, 2, 5, 4, 4, 6, 4, 2, 5, 5, 3, 6, 1, 4, 5)
x
cut(x, brks, lbs)
brks = c(2, 4, 6)
lbs = c(1,2,3)
cut(x, brks, lbs)
cut(x, brks)
x = c(5, 2, 6, 4, 1, 2, 2, 5, 4, 4, 6, 4, 2, 5, 5, 3, 6, 1, 4, 5)
brks = c(0, 2, 4, 6)
lbs = c(1,2,3)
cut(x, brks)
cut(x, brks, lbs)
v1 <- c(TRUE, TRUE, FALSE, TRUE, FALSE)
v2 <- 1:6
v3 <- 5:10
length(x)
func1 <- function(a, b) {
result = 0
for(i in 1:length(a)){
result = result + (a[i]*b[i])^i
}
return(result)
}
bu = 1:6
ral = 5:10
bu*ral
bu*ral
bu
(bu*ral)^(1:6)
sum((bu*ral)^(1:6))
#c) Denote by (a1, . . . , a6)′ the vector representing v2 and by (b1, . . . , b6)′ the vector rep- resenting v3. Then, compute the value of ,6i=1(ai · bi)i on two different ways:
#(i) using a loop and (ii) without using a loop
func1 <- function(a, b) {
result = 0
for(i in 1:length(a)){
result = result + (a[i]*b[i])^i
}
return(result)
}
# without loop
#  sum((bu*ral)^(1:6))
q = c(1,2,3,4,5)
which(q > 3)
which(q > 3)[1]
v4 = v1 * 1
v4
v2
v2 - v4
length(v2)
short_len = if(length(v2) > length(v4)) length(v4) else length(v2)
short_len = if(length(v2) > length(v4)) length(v4) else length(v2)
for(i in 1:short_len){
if(v2[i] > v4[i]){
ind = i
break
}
}
ind
v4[1:length(v2)]
v2[1:length(v4)]
which(v2[1:length(v4)] > v4)[1]
example.function <- function(vec1, vec2) {
result = 0
if(length(vec1) == length(vec2)){
result = sum((vec1*vec2)^c(1:length(vec1)))
} else {
short_len = if(length(vec1) > length(vec2)) length(vec2) else length(vec1)
result = which(vec1[1:short_len] > vec2[1:short_len])[1]
}
return(result)
}
example.function <- function(vec1, vec2) {
result = 0
if(length(vec1) == length(vec2)){
result = sum((vec1*vec2)^c(1:length(vec1)))
} else {
short_len = if(length(vec1) > length(vec2)) length(vec2) else length(vec1)
result = which(vec1[1:short_len] > vec2[1:short_len])[1]
if(!result){
result = Inf
}
}
return(result)
}
setwd("~/Desktop/RWTH/SS22/Applied-Data-Analysis/Rlab")
data.frame = read.table("credits.wsv")
data.frame
data.frame = read.table("credits.wsv", header = TRUE)
data.frame
data.frame$amount
class(data.frame$amount)
data.frame[2,]
data.frame[,2]
data.frame[-8,]
data.frame[,-8]
data.frame
colnames(data.frame)
colnames(data.frame[,-8])
colnames(data.frame[,-1:8])
colnames(-data.frame[,1:8])
colnames(data.frame[,1:8])
colnames(data.frame[,1:8])
-data.frame[,1:8]
data.frame[,1:8]
colnames(data.frame[,9:])
colnames(data.frame[,:9])
colnames(data.frame[,9])
data.frame[,9]
colnames(data.frame[,-9])
colnames(data.frame[,-9:])
data.frame[,-(1:8)]
colnames(data.frame[,-(1:8)])
summary(data.frame$amount)
mean(1:6)
my.sd <- function(data, corrected = TRUE) {
result = 0
if(corrected){
result = sqrt(sum((data - mean(data))^2)/(length(data) - 1))
} else {
result = sqrt(sum((data - mean(data))^2)/(length(data)))
}
return(result)
}
sd(data.frame$amount)
my.sd(data.frame$amount)
my.sd(data.frame$amount, corrected = FALSE)
n10 = rnorm(5, 2, 10)
n10
n10 = rnorm(10, 5, 2)
n10
#(c) For each sample size n compute the α-quantiles of the generated values for
#(i) α = 0.3 (ii) α = 0.5
mean(n10)
sd(n10)
pnorm(7, mean(n10), sd(n10))
pnorm(3, mean(n10), sd(n10))
pnorm(7, mean(n10), sd(n10)) - pnorm(3, mean(n10), sd(n10))
pnorm(7, mean(n50), sd(n50)) - pnorm(3, mean(n50), sd(n50))
pnorm(7, mean(n100), sd(n100)) - pnorm(3, mean(n100), sd(n100))
pnorm(9, mean(n10), sd(n10)) - pnorm(5, mean(n10), sd(n10))
pnorm(9, mean(n50), sd(n50)) - pnorm(5, mean(n50), sd(n50))
pnorm(9, mean(n100), sd(n100)) - pnorm(5, mean(n100), sd(n100))
pnorm(9, 5, 2) - pnorm(5, 5, 2)
pnorm(c(7,9), 5, 2) - pnorm(c(3, 5), 5, 2)
qnorm(0.3, mean(n10), sd(n10))
qnorm(0.3, mean(n10), sd(n10))
qnorm(0.5, mean(n10), sd(n10))
qnorm(0.75, mean(n10), sd(n10))
B
B[1:2,1:2]
B[1:2,3]
c(sum(B[1:2,1:2]),sum(B[1:2,3])
dsdf
sum(B[1:2,1:2]),sum(B[1:2,3])
sum(B[1:2,1:2]),sum(B[1:2,3]), sum(B[3,1:2])
sum(B[1:2,1:2])
sum(B[1:2,3])
mean(3 <= n10 & n10 <= 7)
mean(3 <= n50 & n50 <= 7)
mean(3 <= n100 & n100 <= 7)
p = pnorm(c(7,9), mean = 5, sd = 2) - pnorm(c(3,5), mean = 5, sd = 2)
p
n10
3 <= n100 & n100 <= 7
3 <= n10 & n10 <= 7
quantile(n10, probs = c(0.3, 0.5, 0.75))
quantile(n50, probs = c(0.3, 0.5, 0.75))
quantile(n100, probs = c(0.3, 0.5, 0.75))
